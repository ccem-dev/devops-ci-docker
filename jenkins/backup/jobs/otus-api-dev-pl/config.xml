<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.29">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>repository_snapshots</name>
          <description></description>
          <defaultValue>http://nexus.inf.otus-solutions.com.br/repository/maven-snapshots/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>repository_releases</name>
          <description></description>
          <defaultValue>http://nexus.inf.otus-solutions.com.br/repository/maven-releases/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.3">
      <projectUrl>https://github.com/ccem-dev/otus-api/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.3">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.60">
    <script>def notifyEmail(){
    emailext (
        subject: &apos;$DEFAULT_SUBJECT&apos;,
        body: &apos;$DEFAULT_CONTENT&apos;,
        recipientProviders: [[$class: &apos;DevelopersRecipientProvider&apos;]],
        replyTo: &apos;$DEFAULT_REPLYTO&apos;,
        to: &apos;$DEFAULT_RECIPIENTS&apos;
        )
}
def notifyStart(){
     slackSend channel: &apos;#otus-plataform&apos;,
                    color: &apos;#FC0&apos;,
                    message: &quot;STARTED: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;,
                    teamDomain: &apos;otussolutions&apos;,
                    token: &apos;OIctpW2cDE8MpIC4uRDfEJpi&apos;
}
pipeline {
  agent any
  tools {
    maven &apos;maven 3.5.0&apos;
    jdk &apos;Java8&apos;
  }

  stages {
    stage(&apos;Checkout Repository&apos;){
        steps{
            git(url: &apos;https://github.com/ccem-dev/otus-api.git&apos;,
            credentialsId: &apos;5c08db6f-ba8a-4e32-b867-d90ec54186b4&apos;,
            branch: &quot;dev-test&quot;)
            notifyStart()
        }

    }
    stage(&apos;Build Code&apos;) {
      steps {
        sh &apos;export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64&apos;
        sh &apos;mvn -f otus-root/pom.xml clean install -U -DskipTests&apos;
      }
      post {
                failure{
                    notifyEmail()
                }
            }

    }
     stage(&apos;Run Unit Tests&apos;){
         steps {
        sh &apos;mvn -f otus-root/pom.xml test -Djdk.net.URLClassPath.disableClassPathURLCheck=true&apos;
      }
    }

    stage(&apos;Publish artifact&apos;) {
      steps {
        sh &apos;mvn -f otus-root/pom.xml deploy -Djacoco.skip.instrument=true&apos;
      }

    }

    stage(&apos;Update Docs&apos;) {
        steps {
            withSonarQubeEnv(&apos;sonar&apos;) {
              sh &apos;mvn -f otus-root/pom.xml sonar:sonar&apos;
            }
            script {
                timeout(time: 1, unit: &apos;HOURS&apos;) {
                    def qualityGate = waitForQualityGate()
                    if (qualityGate.status != &apos;OK&apos;) {
                        error &quot;O código não está de acordo com as regras do Sonar: ${qualityGate.status}&quot;
                    }
                }
            }
        }

    }
    stage(&apos;Deploy&apos;) {
      steps {
        echo &apos;Deploy&apos;
        // sh &apos;mvn -f otus-root/pom.xml clean install -Ddatabase.host=${DATABASE_DEV_HOST} -Ddatabase.username=${DATABASE_USER} -Ddatabase.password=${DATABASE_PWD}&apos;
      }

    }



    }

  }</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
