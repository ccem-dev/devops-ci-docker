<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.29">
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>api</name>
          <description></description>
          <defaultValue>https://api-domain.linda.ufrgs.br</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.3">
      <projectUrl>https://github.com/ccem-dev/otus-domain/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.60">
    <script>def notifyEmail(){
    emailext (
        subject: &apos;$DEFAULT_SUBJECT&apos;,
        body: &apos;$DEFAULT_CONTENT&apos;,
        recipientProviders: [[$class: &apos;DevelopersRecipientProvider&apos;]], 
        replyTo: &apos;$DEFAULT_REPLYTO&apos;,
        to: &apos;$DEFAULT_RECIPIENTS&apos;
        )
}
def notifyStart(){
     slackSend channel: &apos;#otus-plataform&apos;, 
                    color: &apos;#FC0&apos;, 
                    message: &quot;STARTED: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;, 
                    teamDomain: &apos;otussolutions&apos;, 
                    token: &apos;OIctpW2cDE8MpIC4uRDfEJpi&apos;
}
pipeline {
    agent any
    tools {
    maven &apos;maven 3.5.0&apos;
    jdk &apos;Java8&apos;
    nodejs &apos;nodeJS&apos;
}

    stages{
        stage(&apos;Checkout Repository&apos;){
            steps{
                git(url: &apos;https://github.com/ccem-dev/otus-domain.git&apos;, credentialsId: &apos;5c08db6f-ba8a-4e32-b867-d90ec54186b4&apos;, branch: &quot;master&quot;)
            sh &quot;rm -rf otus-domain/node_modules/&quot;
            sh &quot;rm -rf otus-domain/package-lock.json&quot;
            notifyStart()
            }
            post {
                failure{
                    notifyEmail()
                }
            }
    }
    stage(&apos;Build Code&apos;) {
      steps{
        sh &quot;npm install --prefix otus-domain/&quot;
        sh &quot;mvn -f otus-domain/pom.xml exec:exec@npm-replace-env -Dapi.url=${api}&quot;
        sh &quot;npm run build --prefix otus-domain/&quot;
      }
      post {
                failure{
                    notifyEmail()
                }
            }
    }
    
    stage(&apos;Run Unit Tests&apos;){
        steps{
            sh &quot;npm run test --prefix otus-domain/&quot;
        }
        post {
                failure{
                    notifyEmail()
                }
            }
    }


    stage(&apos;Deploy&apos;) {
      steps {
        sh &quot;npm prune --production --prefix otus-domain/&quot;
        // sh &quot;mvn -f otus-domain/pom.xml antrun:run@static-deploy -Dscp.user=&apos;${SERVER_USER}&apos; -Dscp.host=&apos;${SERVER_HOST}&apos; -Dscp.target=&apos;${SERVER_TARGET}&apos; -Dscp.password=&apos;${SERVER_PWD}&apos;&quot;
        echo &apos;Deploy&apos;
      }
      post {
                always{
                    notifyEmail()
                }
            }
    }
  }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>