<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.29">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>URL_SONAR</name>
          <description></description>
          <defaultValue>http://sonar.inf.otus-solutions.com.br</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PWD_SONAR</name>
          <description></description>
          <defaultValue>f8Gov4WljZkJQv</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>USER_SONAR</name>
          <description></description>
          <defaultValue>jenkins</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DATABASE_SONAR</name>
          <description></description>
          <defaultValue>jdbc:postgresql://ccem.ufrgs.br/sonar</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERVER_USER</name>
          <description></description>
          <defaultValue>otus</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>repository_npm</name>
          <description></description>
          <defaultValue>http://nexus.inf.otus-solutions.com.br/repository/npm-repositories/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.3">
      <projectUrl>https://github.com/ccem-dev/otus-preview-js/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.60">
    <script>def notifyEmail(){
    emailext (
        subject: &apos;$DEFAULT_SUBJECT&apos;,
        body: &apos;$DEFAULT_CONTENT&apos;,
        recipientProviders: [[$class: &apos;DevelopersRecipientProvider&apos;]], 
        replyTo: &apos;$DEFAULT_REPLYTO&apos;,
        to: &apos;$DEFAULT_RECIPIENTS&apos;
        )
}
def notifyStart(){
     slackSend channel: &apos;#otus-plataform&apos;, 
                    color: &apos;#FC0&apos;, 
                    message: &quot;STARTED: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos; (${env.BUILD_URL})&quot;, 
                    teamDomain: &apos;otussolutions&apos;, 
                    token: &apos;OIctpW2cDE8MpIC4uRDfEJpi&apos;
}
pipeline {
    agent any
    tools {
        maven &apos;maven 3.5.0&apos;
        jdk &apos;Java8&apos;
        nodejs &apos;nodeJS&apos;
    }

    stages{
        
        stage(&apos;Checkout Repository&apos;){
            steps{
                git(url: &apos;https://github.com/ccem-dev/otus-preview-js.git&apos;, 
                credentialsId: &apos;5c08db6f-ba8a-4e32-b867-d90ec54186b4&apos;,
                branch: &quot;master&quot;)
                sh &quot;rm -rf node_modules/&quot;
                sh &quot;rm -rf package-lock.json&quot;
                notifyStart()
            }
            post {
                failure{
                    notifyEmail()
                }
            }
        }
        stage(&apos;Build Code&apos;) {
            steps{
                sh &quot;npm install&quot;
                sh &quot;npm run build&quot;
            }
            post {
                failure{
                    notifyEmail()
                }
            }
        }

        stage(&apos;Run Unit Tests&apos;) {
            steps{
                sh &quot;npm run test&quot;
            }
            post {
                failure{
                    notifyEmail()
                }
            }
        }
        
        stage(&apos;Publish Artifact&apos;) {
          steps {
            sh &quot;npm publish --registry ${repository_npm}&quot;
          }
          post {
                failure{
                    notifyEmail()
                }
            }
        }

        stage(&apos;Update Docs&apos;) {
            steps {
                withSonarQubeEnv(&apos;sonar&apos;) {
                    sh &quot;npm run gulp sonar --sonarUrl=&apos;${URL_SONAR}&apos; --sonarDatabaseUsername=&apos;${USER_SONAR}&apos; --sonarDatabasePassword=&apos;${PWD_SONAR}&apos;&quot;
                }
                script {
                    timeout(time: 1, unit: &apos;HOURS&apos;) {
                        def qualityGate = waitForQualityGate() 
                        if (qualityGate.status != &apos;OK&apos;) {
                            error &quot;O código não está de acordo com as regras do Sonar: ${qualityGate.status}&quot;
                        }
                    }
                }
            }
            post {
                always{
                    notifyEmail()
                }
            }
        }
    
  }

}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>